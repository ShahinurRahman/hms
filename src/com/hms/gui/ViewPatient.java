/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hms.gui;

import com.hms.gui.test.DptBiochemistry;
import com.hms.gui.test.DptBlood;
import com.hms.gui.test.DptClinicalPathology;
import com.hms.gui.test.DptClonoscopy;
import com.hms.gui.test.DptColorDoppler;
import com.hms.gui.test.DptCtScan;
import com.hms.gui.test.DptDentalXray;
import com.hms.gui.test.DptDiabetics;
import com.hms.gui.test.DptDuplexStudy;
import com.hms.gui.test.DptECG;
import com.hms.gui.test.DptEEG;
import com.hms.gui.test.DptETT;
import com.hms.gui.test.DptEchocardiogram;
import com.hms.gui.test.DptEndoscopy;
import com.hms.gui.test.DptGastroscopy;
import com.hms.gui.test.DptHaematology;
import com.hms.gui.test.DptHistopathology;
import com.hms.gui.test.DptImmunology;
import com.hms.gui.test.DptMRI;
import com.hms.gui.test.DptMicrobiology;
import com.hms.gui.test.DptPcrLab;
import com.hms.gui.test.DptSonography;
import com.hms.gui.test.DptStool;
import com.hms.gui.test.DptUSG;
import com.hms.gui.test.DptUrine;
import com.hms.gui.test.DptXray;
import com.hms.model.Patient;
import com.hms.model.TestEntry;
import com.hms.report.controller.ReportController;
import com.hms.util.MySession;
import org.hibernate.Session;
import com.hms.util.TheDates;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Criteria;
import org.hibernate.criterion.Restrictions;

/**
 *
 * @author ZiBRAIL
 */
public class ViewPatient extends javax.swing.JFrame {

    /**
     * Creates new form ViewPatient
     */
    Session session;

    public ViewPatient() {
        initComponents();

        getPatientData();

        getTestTableModel();
        session = new MySession().getSession();
        session.beginTransaction();
        Criteria criteria = session.createCriteria(Patient.class);
        Patient patient = (Patient) criteria.add(Restrictions.eq("regNo", txtId.getText())).uniqueResult();
        session.getTransaction().commit();
        session.close();

        ListSelectionModel selectionModel = myTable.getSelectionModel();
        selectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        selectionModel.addListSelectionListener(new RowListeners(this, patient));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnPrint = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblUserInfo = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        myTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PATIENT TEST REPORT");
        setBackground(new java.awt.Color(153, 153, 255));
        setBounds(new java.awt.Rectangle(200, 70, 0, 0));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("View Patient Test Report");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnPrint.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPrint.setText("Print Voucher");
        btnPrint.setMaximumSize(new java.awt.Dimension(63, 25));
        btnPrint.setMinimumSize(new java.awt.Dimension(63, 25));
        btnPrint.setPreferredSize(new java.awt.Dimension(63, 23));
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Patient");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(374, 374, 374)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDelete)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblUserInfo.setBackground(new java.awt.Color(153, 204, 255));
        tblUserInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ));
        jScrollPane2.setViewportView(tblUserInfo);

        jPanel4.setBackground(new java.awt.Color(153, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel3.setBackground(new java.awt.Color(153, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel1.setText("Registration No:");

        txtId.setBackground(new java.awt.Color(240, 240, 240));
        txtId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtId.setMinimumSize(new java.awt.Dimension(4, 23));
        txtId.setPreferredSize(new java.awt.Dimension(4, 23));
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel2.setText("Patient Name:");

        txtName.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtId, txtName});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Test List Details:");

        myTable.setBackground(new java.awt.Color(153, 204, 255));
        myTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        myTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Test Id", "Test Name", "Test Rate", "Delivery Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        myTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        myTable.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        myTable.setRowHeight(20);
        jScrollPane1.setViewportView(myTable);
        myTable.getColumnModel().getColumn(0).setResizable(false);
        myTable.getColumnModel().getColumn(1).setResizable(false);
        myTable.getColumnModel().getColumn(2).setResizable(false);
        myTable.getColumnModel().getColumn(3).setResizable(false);
        myTable.getColumnModel().getColumn(4).setResizable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jLabel4)
                        .addGap(0, 269, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(374, 374, 374)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed
    DefaultTableModel dtm;

    public void getTestTableModel() {
        dtm = new DefaultTableModel();
        myTable.setModel(dtm);
        dtm.addColumn("Test ID");
        dtm.addColumn("Test Name");
        dtm.addColumn("Test Rate");
        dtm.addColumn("Delivery Date");
        dtm.addColumn("Status");
        myTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        myTable.getColumnModel().getColumn(0).setPreferredWidth(70);
        myTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        myTable.getColumnModel().getColumn(2).setPreferredWidth(80);
        myTable.getColumnModel().getColumn(3).setPreferredWidth(200);
        myTable.getColumnModel().getColumn(4).setPreferredWidth(80);
    }
    DefaultTableModel ptd;

    public void getPatientData() {
        session = new MySession().getSession();
        session.beginTransaction();
        Criteria criteria = session.createCriteria(Patient.class);
        Patient patient = (Patient) criteria.add(Restrictions.eq("regNo", txtId.getText())).uniqueResult();
        session.getTransaction().commit();
        session.close();
        ListSelectionModel selectionModel = tblUserInfo.getSelectionModel();
        selectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        selectionModel.addListSelectionListener(new RowListeners(this, patient));

        ptd = new DefaultTableModel();
        tblUserInfo.setModel(ptd);
        ptd.addColumn("P.ID");
        ptd.addColumn("Patient Name");
        tblUserInfo.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblUserInfo.getColumnModel().getColumn(0).setPreferredWidth(55);
        tblUserInfo.getColumnModel().getColumn(1).setPreferredWidth(190);
    }

    private void txtIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyReleased

        getTestTableModel();
        String stringId = txtId.getText();
        session = new MySession().getSession();
        session.beginTransaction();

        Criteria criteria = session.createCriteria(Patient.class);
        Patient patient = (Patient) criteria.add(Restrictions.eq("regNo", stringId)).uniqueResult();
        session.getTransaction().commit();

        if (patient != null) {
            txtName.setText(patient.getPatientName());
            String[] testIds = patient.getTestIds().split(",");
            for (int i = 0; i < testIds.length; i++) {
                Long testId = Long.parseLong(testIds[i]);
                session = new MySession().getSession();
                session.beginTransaction();
                TestEntry testEntry = (TestEntry) session.get(TestEntry.class, testId);
                dtm.addRow(new Object[]{testEntry.getId(), testEntry.getTestName(), testEntry.getRate(),
                    new TheDates().getDateAfterDay(patient.getRegDate().toString(), testEntry.getDeliveryDays()), 7});
            }
        }
    }//GEN-LAST:event_txtIdKeyReleased

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        showVoucher();
    }//GEN-LAST:event_btnPrintActionPerformed

    public void showVoucher() {
        String regNo = txtId.getText();
        session = new MySession().getSession();
        session.beginTransaction();

        Criteria criteria = session.createCriteria(Patient.class);
        Patient patient = (Patient) criteria.add(Restrictions.eq("regNo", regNo)).uniqueResult();

        session.getTransaction().commit();

        List<Map<String, String>> testList = new ArrayList<Map<String, String>>();
        Map<String, String> testMap;
        Double total = 0.0;
        if (patient != null) {
            txtName.setText(patient.getPatientName());
            String[] testIds = patient.getTestIds().split(",");

            for (int i = 0; i < testIds.length; i++) {
                Long testId = Long.parseLong(testIds[i]);
                session = new MySession().getSession();
                session.beginTransaction();
                TestEntry testEntry = (TestEntry) session.get(TestEntry.class, testId);

                testMap = new HashMap<String, String>();
                testMap.put("id", testEntry.getId() + "");
                testMap.put("testName", testEntry.getTestName());
                testMap.put("rate", testEntry.getRate() + "");
                testMap.put("deleveryDate", testEntry.getDeliveryDays() + "");
                testList.add(testMap);

                total += testEntry.getRate();
            }
        }

        Map<String, Object> param = new HashMap<String, Object>();
        param.put("name", patient.getPatientName());
        param.put("age", patient.getAge());
        param.put("sex", patient.getSex());
        param.put("contact", patient.getContact());
        param.put("ref_doc", patient.getReferenceBy());

        param.put("total", total + "");
        param.put("paid", patient.getPaid());
        param.put("due", patient.getDue());

        new ReportController().showReport("voucherPrint", param, testList);
    }

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        session = new MySession().getSession();
        session.beginTransaction();
        Criteria criteria = session.createCriteria(Patient.class);
        Patient patient = (Patient) criteria.add(Restrictions.eq("regNo", txtId.getText())).uniqueResult();
        session.delete(patient);
        session.getTransaction().commit();
        session.close();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPatient().setVisible(true);
            }
        });
    }

    class RowListeners implements ListSelectionListener {

        ViewPatient readRow;
        JTable table;
        Patient patient;

        public RowListeners(ViewPatient viewPatient, Patient pat) {
            readRow = viewPatient;
            table = readRow.myTable;
            patient = pat;
        }

        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                ListSelectionModel model = table.getSelectionModel();
                int lead = model.getLeadSelectionIndex();
                displayRowValues(lead);
            }
        }

        public void displayRowValues(int rowIndex) {
            String testId = table.getValueAt(rowIndex, 0).toString();
            session = new MySession().getSession();
            session.beginTransaction();
            TestEntry test = (TestEntry) session.get(TestEntry.class, Long.parseLong(testId));
            int deptId = Integer.parseInt(test.getDepartment().getId() + "");
            session.getTransaction().commit();
            session.close();
            //String regNo = 

            if (deptId == 1) {
                new DptBiochemistry().setVisible(true);
            } else if (deptId == 2) {
                new DptBlood().setVisible(true);
            } else if (deptId == 3) {
                new DptClinicalPathology().setVisible(true);
            } else if (deptId == 4) {
                new DptClonoscopy().setVisible(true);
            } else if (deptId == 5) {
                new DptColorDoppler().setVisible(true);
            } else if (deptId == 6) {
                new DptDiabetics().setVisible(true);
            } else if (deptId == 7) {
                new DptCtScan().setVisible(true);
            } else if (deptId == 8) {
                new DptDentalXray().setVisible(true);
            } else if (deptId == 9) {
                new DptDuplexStudy().setVisible(true);
            } else if (deptId == 10) {
                new DptECG().setVisible(true);
            } else if (deptId == 11) {
                new DptEchocardiogram().setVisible(true);
            } else if (deptId == 12) {
                new DptEEG().setVisible(true);
            } else if (deptId == 13) {
                new DptEndoscopy().setVisible(true);
            } else if (deptId == 14) {
                new DptETT().setVisible(true);
            } else if (deptId == 15) {
                new DptGastroscopy().setVisible(true);
            } else if (deptId == 16) {
                new DptHaematology().setVisible(true);
            } else if (deptId == 17) {
                new DptHistopathology().setVisible(true);
            } else if (deptId == 18) {
                new DptImmunology().setVisible(true);
            } else if (deptId == 19) {
                new DptMicrobiology().setVisible(true);
            } else if (deptId == 20) {
                new DptMRI().setVisible(true);
            } else if (deptId == 21) {
                new DptPcrLab().setVisible(true);
            } else if (deptId == 22) {
                new DptSonography().setVisible(true);
            } else if (deptId == 23) {
                new DptStool().setVisible(true);
            } else if (deptId == 24) {
                new DptUrine().setVisible(true);
            } else if (deptId == 25) {
                new DptUSG().setVisible(true);
            } else if (deptId == 26) {
                new DptXray().setVisible(true);
            }
            //TODO...
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable myTable;
    private javax.swing.JTable tblUserInfo;
    public javax.swing.JTextField txtId;
    private javax.swing.JLabel txtName;
    // End of variables declaration//GEN-END:variables
}
